dist: xenial
language: scala
jdk:
  - openjdk8
stages:
  - name: test
  - name: test coverage
    if: (branch = master AND type = push) OR (tag IS present)
  - name: publish pages
    if: (branch = master AND type = push) OR (tag IS present)
#  - name: release
#    if: (branch = master AND type = push) OR (tag IS present)
jobs:
  include:
    - stage: test
      scala: 2.12.8
      install:
        - npm install jsdom
      script: sbt ++$TRAVIS_SCALA_VERSION test
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt
          - $HOME/.coursier
          - node_modules
    - stage: test coverage
      name: "Publish to Codecov"
      scala: 2.12.8
      install:
        - npm install jsdom
      script:
        - sbt ++$TRAVIS_SCALA_VERSION clean coverage weddingplannerNS/test weddingplannerApi/test weddingplannerService/test
        - sbt ++$TRAVIS_SCALA_VERSION coverageReport coverageAggregate
      after_success:
        - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt
          - $HOME/.coursier
    - stage: publish pages
      name: "Publish to GitHub"
      scala: 2.12.8
      before_install:
        - export PATH=${PATH}:./vendor/bundle
      install:
        - gem update --system
        - gem install sass
        - gem install jekyll -v 3.8.5
      script: sbt ++$TRAVIS_SCALA_VERSION site/makeMicrosite
      cache:
        - bundler
        - directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt
          - $HOME/.coursier
          - node_modules
          - /home/travis/.rvm/
      deploy:
        provider: pages
        skip-cleanup: true
        keep-history: true
        fqdn: thijsbroersen.github.io
        github-token: $GITHUB_TOKEN
        on:
          branch: master
        local-dir: site/target/jekyll
        target-branch: gh-pages
#    - stage: release
#      name: "Cross-publish to Sonatype and docker"
#      name: "Publish to dockerhub"
#      services: docker
#      before_install: git fetch --tags
#      script: sbt ci-release
#      cache:
#        directories:
#          - $HOME/.ivy2/cache
#          - $HOME/.sbt
#          - $HOME/.coursier
before_cache:
  - find $HOME/.sbt -name "*.lock" -type f -delete
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -type f -delete
